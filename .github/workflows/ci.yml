name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    - name: Install dependencies
      run: npm install
    - name: Run tests with coverage
      run: npm run test:coverage
    - name: Check coverage threshold
      run: |
        if [ ! -f "./coverage/lcov.info" ]; then
          echo "Rapport de couverture manquant"
          exit 1
        fi
        
        COVERAGE=$(grep -o 'Lines.*%' coverage/lcov-report/index.html | grep -o '[0-9.]*' | head -1 || echo "0")
        echo "Couverture: $COVERAGE%"
        
        if (( $COVERAGE < 95 )); then
          echo "Couverture < 95%"
          exit 1
        fi

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install sshpass
      run: sudo apt-get install -y sshpass
    
    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp -r src/ package.json README.md deploy/
        touch deploy/package-lock.json
        cd deploy && zip -r ../deploy.zip .
    
    - name: Deploy to VPS
      env:
        VPS_IP: ${{ secrets.VPS_IP }}
        VPS_USER: ${{ secrets.VPS_USER }}
        VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
      run: |
        cat > deploy.sh << 'EOL'
        #!/bin/bash
        set -e
        
        apt-get update && apt-get install -y unzip
        
        APP_DIR=/var/www/microservice-financier
        
        mkdir -p $APP_DIR
        
        find $APP_DIR -mindepth 1 -maxdepth 1 ! -name "node_modules" ! -name ".env" -exec rm -rf {} \;
        
        unzip -o /tmp/deploy.zip -d $APP_DIR
        
        cd $APP_DIR
        npm install --production
        
        npm install -g pm2
        
        pm2 restart microservice-financier || pm2 start src/server.js --name microservice-financier
        
        echo "Déploiement terminé"
        EOL
        
        export SSHPASS="$VPS_PASSWORD"
        
        sshpass -e scp -o StrictHostKeyChecking=no deploy.zip $VPS_USER@$VPS_IP:/tmp/
        sshpass -e scp -o StrictHostKeyChecking=no deploy.sh $VPS_USER@$VPS_IP:/tmp/
        
        sshpass -e ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_IP "chmod +x /tmp/deploy.sh && /tmp/deploy.sh"
        
        echo "Déploiement réussi"
